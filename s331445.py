from numpy import sin, log, cos, sqrt, tan, exp


# genetic_programming(
#     X.T, y,
#     pop_size=500,
#     generations=1000,
#     max_depth=5,
#     crossover_rate=0.4,
#     mutation_rate=0.8,
#     elitism=True,
#     elitism_size=10,
#     verbose=False,
# )


def f1(x):
    return sin(x[0])

def f2(x):
    return (1256049.9269900217 * x[0]) - (((log(((3.09 / abs((((x[1] + 0.06592670945610565) / 3.4950562827637777) * x[0]))) + x[2])) * x[0]) - sqrt(sqrt((-5.06 * ((((log((((((log((x[2] + x[2])) * x[1]) - sqrt(sqrt((-23.025850929940457 - ((-23.025850929940457 + x[1]) + (((x[1] / (((x[1] - 1.82) / 0.0011362748983197658) * -1.99)) * -3.63605543005999) / (x[1] - x[0]))))))) / 0.0011362748983197658) * log(x[1])) + x[2])) * x[0]) - abs(((((log((x[2] - abs(sin(x[2])))) - x[2]) / x[0]) * log(x[2])) - x[2]))) / 0.0011362748983197658) + (((((log((((((log(sqrt((x[1] * (x[2] + (((((log((((((log((x[2] + x[2])) * x[0]) - sqrt(sqrt((x[1] * (abs(x[0]) + ((((x[1] - 1.82) / 0.0011362748983197658) * -1.99) / x[1]))))))) / 0.0011362748983197658) * log(x[1])) + 5.7179819460511165)) / x[0]) - x[1]) / 0.0011362748983197658) * x[1]) / x[1]))))) * x[0]) - sqrt(((x[2] * 4.93) * x[0]))) + log(log(((3.09 / abs((-0.07232577525325448 * x[0]))) + x[2])))) * -23.381862946052085) + -3.47)) * x[0]) - abs(((((log((x[2] + x[0])) + x[1]) / x[0]) * -10.111962127618499) - x[2]))) / 0.0011362748983197658) * -7.663457801784819) / -0.695563326462902))))) / 0.0011362748983197658) * log(x[1])

def f3(x):
    return (x[0] * x[0]) - ((log(abs(x[2])) + cos((x[2] + sqrt(abs(sin((x[2] * 2.2821526795371705)) + 2.542017157944702))))) + (x[1] * (x[1] * x[1])))

def f4(x):
    return (cos(x[1]) * 7.003046736840069) + 3.2918835062869807

def f5(x):
    return 0.0

def f6(x):
    return (sqrt(abs((log(abs(x[0])) - 0.12803773495236115))) + (2.5574403418456706 * (0.6658640137342742 * x[1]))) - x[0]

def f7(x):
    return abs((cos((((cos(x[1]) + -0.9886517628517197) * (((sin(cos(x[1])) + (x[0] - tan(cos((0.8589981694088257 - x[0]))))) * (sin((abs(cos(sqrt(((x[0] + x[0]) / (x[0] * x[1]))))) * exp(sin(sqrt((x[1] * exp(x[1]))))))) + (x[1] - tan(cos(x[0]))))) - 6.478175963537582)) / x[0])) - (-5.18 * (sqrt((sqrt((x[1] * log(x[0]))) * (((((cos(x[1]) / -0.9886517628517197) * ((((exp(exp(x[1])) - -4.237235694570927) + (x[1] - (0.00429630469075234 - ((sqrt(x[1]) * (((((cos(x[0]) / -0.9886517628517197) * ((((exp(exp(x[1])) - -4.237235694570927) + exp(x[0])) * x[0]) - sqrt(x[1]))) + (-4.27158591067645 - exp((tan(cos(x[0])) * x[0])))) * cos(x[0])) - 6.478175963537582)) - exp((x[0] * x[1])))))) * x[0]) - x[0])) + (-4.824234886929571 - exp((x[0] * x[0])))) * cos(x[0])) - sqrt((x[1] * log(x[0])))))) - exp((x[0] * x[1]))))))

def f8(x):
    return x[0] - ((x[2] - (8.33968872568729 - x[0])) * exp(((x[0] + 7.02) + sqrt(x[0]))))